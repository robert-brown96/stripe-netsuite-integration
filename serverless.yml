org: robertbrown96
app: stripe-netsuite-integration
service: stripe-netsuite-integration

frameworkVersion: ">=2.24.0"

plugins:
    - serverless-add-api-key

custom:
    apiKeys:
        - name: adminApiKey

provider:
    name: aws
    runtime: nodejs14.x
    lambdaHashingVersion: 20201221
    environment:
        NS_ACCOUNT_TABLE: ns_account_table-${self:service}-${opt:stage, self:provider.stage}
        STRIPE_ACCOUNT_TABLE: stripe_account_table-${self:service}-${opt:stage, self:provider.stage}
    stage: ${opt:stage, 'dev'}
    region: ${opt:region, 'us-east-1'}
    iamRoleStatements:
        - Effect: "Allow"
          Action:
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/ns_account_table-*"
        - Effect: "Allow"
          Action:
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:GetItem
              - dynamodb:PutItem
              - dynamodb:UpdateItem
              - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/stripe_account_table-*"

outputs:
    my-key: adminApiKey

# Define Lambda Functions
functions:
    # Netsuite authorization CRUD Functions
    createNetSuiteAccount:
        handler: src/admin/netsuiteaccounts/create.handler
        description: Create a new Netsuite Account Authorization
        events:
            - http:
                  path: admin/netsuiteaccounts
                  method: post
                  cors: true
                  private: true
    getNetSuiteAccount:
        handler: src/admin/netsuiteaccounts/get.handler
        description: Retrieves a single Netsuite Account Authorization
        events:
            - http:
                  path: admin/netsuiteaccounts/{realm}
                  method: get
                  cors: true
                  private: true
                  request:
                      parameters:
                          paths:
                              realm: true
    listNetSuiteAccounts:
        handler: src/admin/netsuiteaccounts/list.handler
        description: Retrieves all Netsuite Account Authorizations
        events:
            - http:
                  path: admin/netsuiteaccounts
                  method: get
                  cors: true
                  private: true
    updateNetSuiteAccount:
        handler: src/admin/netsuiteaccounts/update.handler
        description: Update a Netsuite Account Authorization
        events:
            - http:
                  path: admin/netsuiteaccounts/{realm}
                  method: put
                  cors: true
                  private: true
                  request:
                      parameters:
                          paths:
                              realm: true
    delNetSuiteAccount:
        handler: src/admin/netsuiteaccounts/del.handler
        description: Delete a Netsuite Account Authorization
        events:
            - http:
                  path: admin/netsuiteaccounts/{realm}
                  method: delete
                  cors: true
                  private: true
                  request:
                      parameters:
                          paths:
                              realm: true
    # Stripe authorization CRUD Functions
    createStripeAccount:
        handler: src/admin/stripeaccounts/create.handler
        description: Create a new Stripe Account Authorization
        events:
            - http:
                  path: admin/stripeaccounts
                  method: post
                  cors: true
                  private: true
    getStripeAccount:
        handler: src/admin/stripeaccounts/get.handler
        description: Retrieves a single Stripe Account Authorization
        events:
            - http:
                  path: admin/stripeaccounts/{publishableKey}
                  method: get
                  cors: true
                  private: true
                  request:
                      parameters:
                          paths:
                              publishableKey: true
    listStripeAccounts:
        handler: src/admin/stripeaccounts/list.handler
        description: Retrieves all Stripe Account Authorizations
        events:
            - http:
                  path: admin/stripeaccounts
                  method: get
                  cors: true
                  private: true
    updateStripeAccount:
        handler: src/admin/stripeaccounts/update.handler
        description: Update a Stripe Account Authorization
        events:
            - http:
                  path: admin/stripeaccounts/{publishableKey}
                  method: put
                  cors: true
                  private: true
                  request:
                      parameters:
                          paths:
                              publishableKey: true
    delStripeAccount:
        handler: src/admin/stripeaccounts/del.handler
        description: Delete a Stripe Account Authorization
        events:
            - http:
                  path: admin/stripeaccounts/{publishableKey}
                  method: delete
                  cors: true
                  private: true
                  request:
                      parameters:
                          paths:
                              publishableKey: true
    createStripeCheckout:
        handler: src/public/create-stripe-checkout.handler
        description: Create a Stripe checkout link
        events:
            - http:
                  path: /checkout
                  method: get
                  cors: true
                  request:
                      parameters:
                          querystrings:
                              publishableKey: true

resources:
    Resources:
        NetSuiteAccountsTable:
            Type: "AWS::DynamoDB::Table"
            Properties:
                AttributeDefinitions:
                    - AttributeName: "realm"
                      AttributeType: "S"
                KeySchema:
                    - AttributeName: "realm"
                      KeyType: "HASH"
                BillingMode: PAY_PER_REQUEST
                SSESpecification:
                    SSEEnabled: true
                TableName: ${self:provider.environment.NS_ACCOUNT_TABLE}
        StripeAccountsTable:
            Type: "AWS::DynamoDB::Table"
            Properties:
                AttributeDefinitions:
                    - AttributeName: "publishableKey"
                      AttributeType: "S"
                KeySchema:
                    - AttributeName: "publishableKey"
                      KeyType: "HASH"
                BillingMode: PAY_PER_REQUEST
                SSESpecification:
                    SSEEnabled: true
                TableName: ${self:provider.environment.STRIPE_ACCOUNT_TABLE}
